version: '3.7'
services:
  db:
    image: postgres:12-alpine
    environment:
      POSTGRES_PASSWORD: pg
      SETUP_LOCATION: /setup
      # because annoying docker volumes
      SETUP_CLOUDYIPAM_SQL_LOCATION: /tmp/cloudyipam.sql
    volumes:
      - type: bind
        source: ${PWD}/testing/setup
        target: /setup
        read_only: true
      - type: bind
        source: ${PWD}/database/cloudyipam.sql
        target: /tmp/cloudyipam.sql
        read_only: true
      - type: bind
        source: ${PWD}/testing/setup.sh
        target: /docker-entrypoint-initdb.d/setup.sh
        read_only: true
  # Terraform remote state store. Couldn't get Pg to work,
  # same as the below bug report:
  # https://github.com/hashicorp/terraform/issues/23121
  etcd:
    image: bitnami/etcd:3
    environment:
      ALLOW_NONE_AUTHENTICATION: 'yes'
      ETCD_ADVERTISE_CLIENT_URLS: 'http://etcd:2379'
  # for investigating what's going on in the DB
  cloudyipam-cli:
    image: alpine:latest
    entrypoint: ['sleep','3600']
    volumes:
      - type: bind
        source: '${PWD}/cloudyipam.linux'
        target: /bin/cloudyipam
        read_only: true
      - type: bind
        source: '${PWD}/testing/.cloudyipam.yaml'
        target: /root/.cloudyipam.yaml
  terraform:
    image: hashicorp/terraform:0.12.24
    depends_on: [ 'db', 'etcd' ]
    working_dir: /tf
    environment:
      CLOUDYIPAM_HOSTNAME: db
      CLOUDYIPAM_USERNAME: testuser
      CLOUDYIPAM_PASSWORD: pg
      CLOUDYIPAM_TLS: 'false'
      TF_AUTOMATION: 'yes'
      # TF_LOG: 'DEBUG'
    volumes:
      - type: bind
        source: '${PWD}/terraform-provider-cloudyipam.linux'
        target: /tf/testing/terraform-provider-cloudyipam
        read_only: true
      - type: bind
        source: '${PWD}'
        target: '/tf'
        read_only: false
    entrypoint: [ '/tf/testing/tf-compose-test.sh' ]
    user: '1000'

