package sqltext

import "encoding/base64"

const (
	EncodedText = `
LS0gRXh0ZW5zaW9ucwoKLS0gUmVxdWlyZWQgZm9yIFVVSURzCkNSRUFURSBFWFRFTlNJT04gSUYgTk9UIEVYSVNUUyAidXVpZC1vc3NwIjsKCi0tIFRhYmxlcwoKQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgem9uZSAoCiAgaWQgICAgICAgICAgICBVVUlEICAgICAgICAgIFBSSU1BUlkgS0VZIERFRkFVTFQgdXVpZF9nZW5lcmF0ZV92NCgpLAogIG5hbWUgICAgICAgICAgVkFSQ0hBUiAgICAgICBVTklRVUUgTk9UIE5VTEwsCiAgcmFuZ2UgICAgICAgICBDSURSICAgICAgICAgIFVOSVFVRSBOT1QgTlVMTCwKICBwcmVmaXhsZW4gICAgIElOVCAgICAgICAgICAgTk9UIE5VTEwKKTsKCkNSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIHN1Ym5ldCAoCiAgaWQgICAgICAgICAgICBVVUlEICAgICAgICAgIFBSSU1BUlkgS0VZIERFRkFVTFQgdXVpZF9nZW5lcmF0ZV92NCgpLAogIHpvbmUgICAgICAgICAgVVVJRCAgICAgICAgICBSRUZFUkVOQ0VTIHpvbmUoaWQpLAogIHJhbmdlICAgICAgICAgQ0lEUiAgICAgICAgICBOT1QgTlVMTCwKICBhdmFpbGFibGUgICAgIEJPT0xFQU4gICAgICAgTk9UIE5VTEwsCiAgdXNhZ2UgICAgICAgICBWQVJDSEFSICAgICAgIE5PVCBOVUxMCik7CgotLSBBUEkKCkNSRUFURSBPUiBSRVBMQUNFIEZVTkNUSU9OIGNyZWF0ZV96b25lKF9uYW1lIFZBUkNIQVIsIF9yYW5nZSBDSURSLCBfcHJlZml4bGVuIElOVCkKICBSRVRVUk5TIFVVSUQKICBTRUNVUklUWSBERUZJTkVSCkFTICQkCiAgREVDTEFSRQogICAgbmV3aWQgVVVJRDsKICBCRUdJTgogICAgSU5TRVJUIElOVE8gem9uZSAobmFtZSxyYW5nZSxwcmVmaXhsZW4pIFZBTFVFUyAoX25hbWUsIF9yYW5nZSwgX3ByZWZpeGxlbikgUkVUVVJOSU5HIGlkIElOVE8gbmV3aWQ7CiAgICBDQUxMIHBvcHVsYXRlX3pvbmUobmV3aWQpOwogICAgUkVUVVJOIG5ld2lkOwogIEVORDsKJCQgTEFOR1VBR0UgcGxwZ3NxbDsKCi0tIG5vdCB0aGF0IHVzZWZ1bCwgYnV0IG5lY2Vzc2FyeSBmb3IgVGVycmFmb3JtIHByb3ZpZGVyIGltcGxlbWVudGF0aW9uCkNSRUFURSBPUiBSRVBMQUNFIEZVTkNUSU9OIHJlYWRfem9uZShfaWQgVVVJRCkKICBSRVRVUk5TIFNFVE9GIHpvbmUKICBTRUNVUklUWSBERUZJTkVSCkFTICQkCiAgQkVHSU4KICAgIFJFVFVSTiBRVUVSWSBTRUxFQ1QgKiBGUk9NIHpvbmUgV0hFUkUgaWQgPSBfaWQ7CiAgRU5ECiQkIExBTkdVQUdFIHBscGdzcWw7CgotLSByZXF1aXJlcyBhbGwgc3VibmV0cyB0byBiZSBkZXN0cm95ZWQgZmlyc3QuIFRoaXMgaXMgZW5mb3JjZWQgdmlhIHJlZmVyZW50aWFsCi0tIGludGVncml0eS4gQXMgdGhpcyBpcyBpbnRlbmRlZCB0byBiZSBhbiBBUEkgdXNlZCBieSBhcHBsaWNhdGlvbnMgKGFuZAotLSBwYXJ0aWN1bGFybHkgYSBUZXJyYWZvcm0gcHJvdmlkZXIpLCBpdCBjYW4gYmUgY29uc2lkZXJlZCBhIGJ1ZyBpZiB6b25lCi0tIHRlYXJkb3duIGlzIG5vdCBkb25lIGluIHRoZSBhcHByb3ByaWF0ZSBvcmRlcjoKLS0KLS0gMS4gZGVhbGxvY2F0ZSBhbGwgYWxsb2NhdGVkIHN1Ym5ldHMgaW4gdGhlIHpvbmUuIEFmdGVyIHRoaXMgc3RlcCwgYWxsCi0tICAgIHN1Ym5ldHMgaW4gdGhlIHpvbmUgc2hvdWxkIGJlIGF2YWlsYWJsZQotLSAyLiBkZXN0cm95IHRoZSB6b25lCi0tCi0tIERlbGV0aW5nIHRoZSBhdmFpbGFibGUgc3VibmV0cyBpcyBwZXJmb3JtZWQgaGVyZSByYXRoZXIgdGhhbiBpbiBhIHNlcGFyYXRlCi0tIHByb2NlZHVyZSBiZWNhdXNlIHRoaXMgd2F5IGl0IHdpbGwgYWx3YXlzIGJlIHRyYW5zYWN0aW9uLXNhZmUgYW5kIHRoZSBzeXN0ZW0KLS0gc2hvdWxkIG5ldmVyIGJlIGFibGUgdG8gZ2V0IGludG8gYW4gaW5jb25zaXN0ZW50IHN0YXRlLgpDUkVBVEUgT1IgUkVQTEFDRSBQUk9DRURVUkUgZGVzdHJveV96b25lKF9pZCBVVUlEKQogIFNFQ1VSSVRZIERFRklORVIKQVMgJCQKICBCRUdJTgogICAgREVMRVRFIEZST00gc3VibmV0IFdIRVJFIHpvbmUgPSBfaWQgQU5EIGF2YWlsYWJsZSA9IFRSVUU7CiAgICBERUxFVEUgRlJPTSB6b25lIFdIRVJFIGlkID0gX2lkOwogIEVORDsKJCQgTEFOR1VBR0UgcGxwZ3NxbDsKCkNSRUFURSBPUiBSRVBMQUNFIFBST0NFRFVSRSBwb3B1bGF0ZV96b25lKF9pZCBVVUlEKQogIFNFQ1VSSVRZIERFRklORVIKQVMgJCQKICBERUNMQVJFCiAgICB6b25lY2lkciAgQ0lEUjsKICAgIHBsZW4gICAgICBJTlQ7CiAgICBpbmNyICAgICAgSU5UOwogICAgbmluY3IgICAgIElOVDsKICBCRUdJTgogICAgU0VMRUNUIHJhbmdlLCBwcmVmaXhsZW4gRlJPTSB6b25lIFdIRVJFIGlkID0gX2lkIElOVE8gem9uZWNpZHIsIHBsZW47CiAgICBJRiBOT1QgRk9VTkQgVEhFTgogICAgICBSQUlTRSBFWENFUFRJT04gJ3pvbmUgJSBub3QgZm91bmQuJywgX2lkOwogICAgRU5EIElGOwogICAgSUYgbWFza2xlbih6b25lY2lkcikgPiBwbGVuIFRIRU4KICAgICAgUkFJU0UgRVhDRVBUSU9OICd6b25lICUgKCUpIG5vdCBsYXJnZSBlbm91Z2ggZm9yIC8lIG5ldHdvcmtzLicsIF9pZCwgdGV4dCh6b25lY2lkciksIHBsZW47CiAgICBFTkQgSUY7CiAgICBpbmNyIDo9IGZsb29yKDJeKDMyLXBsZW4pKTo6aW50ZWdlcjsKICAgIG5pbmNyIDo9IGZsb29yKDJeKDMyLW1hc2tsZW4oem9uZWNpZHIpKSk6OmludGVnZXIgLyBpbmNyIC0gMTsKICAgIFJBSVNFIE5PVElDRSAnaW5jciA9ICUsIG5pbmNyID0gJScsIGluY3IsIG5pbmNyOwogICAgRk9SIGkgSU4gMCAuLiBuaW5jciBMT09QCiAgICAgIElOU0VSVCBJTlRPIHN1Ym5ldCAoem9uZSwgcmFuZ2UsIGF2YWlsYWJsZSwgdXNhZ2UpIFZBTFVFUyAoX2lkLCBzZXRfbWFza2xlbih6b25lY2lkciArIGkqaW5jciwgcGxlbiksIFRSVUUsICdhdmFpbGFibGUnKTsKICAgIEVORCBMT09QOwogIEVORDsKJCQgTEFOR1VBR0UgcGxwZ3NxbDsKCi0tIHByaW1hcmlseSBpbnRlbmRlZCBmb3IgQ0xJIHVzYWdlCkNSRUFURSBPUiBSRVBMQUNFIEZVTkNUSU9OIGxpc3Rfem9uZXMoKQogIFJFVFVSTlMgU0VUT0Ygem9uZQogIFNFQ1VSSVRZIERFRklORVIKQVMgJCQKICBCRUdJTgogICAgUkVUVVJOIFFVRVJZIFNFTEVDVCAqIEZST00gem9uZSBPUkRFUiBCWSBuYW1lOwogIEVORDsKJCQgTEFOR1VBR0UgcGxwZ3NxbDsKCkNSRUFURSBPUiBSRVBMQUNFIEZVTkNUSU9OIGFsbG9jYXRlX3N1Ym5ldChfaWQgVVVJRCwgX3VzYWdlIFZBUkNIQVIpCiAgUkVUVVJOUyBTRVRPRiBzdWJuZXQKICBTRUNVUklUWSBERUZJTkVSCkFTICQkCiAgQkVHSU4KICAgIFJFVFVSTiBRVUVSWSBVUERBVEUgc3VibmV0IFNFVCBhdmFpbGFibGUgPSBGQUxTRSwgdXNhZ2UgPSBfdXNhZ2UKICAgICAgV0hFUkUgcmFuZ2UgPSAoIFNFTEVDVCByYW5nZSBGUk9NIHN1Ym5ldCBXSEVSRSBhdmFpbGFibGUgPSBUUlVFIEFORCB6b25lID0gX2lkIExJTUlUIDEgKQogICAgICBSRVRVUk5JTkcgKjsKICBFTkQ7CiQkIExBTkdVQUdFIHBscGdzcWw7CgotLSBub3QgdGhhdCB1c2VmdWwsIGJ1dCBuZWNlc3NhcnkgZm9yIFRlcnJhZm9ybSBwcm92aWRlciBpbXBsZW1lbnRhdGlvbgpDUkVBVEUgT1IgUkVQTEFDRSBGVU5DVElPTiByZWFkX3N1Ym5ldChfaWQgVVVJRCkKICBSRVRVUk5TIFNFVE9GIHN1Ym5ldAogIFNFQ1VSSVRZIERFRklORVIKQVMgJCQKICBCRUdJTgogICAgUkVUVVJOIFFVRVJZIFNFTEVDVCAqIEZST00gc3VibmV0IFdIRVJFIGlkID0gX2lkOwogICAgSUYgTk9UIEZPVU5EIFRIRU4KICAgICAgUkFJU0UgRVhDRVBUSU9OICdTdWJuZXQgJSBub3QgZm91bmQnLCBfaWQ7CiAgICBFTkQgSUY7CiAgICBSRVRVUk47CiAgRU5EOwokJCBMQU5HVUFHRSBwbHBnc3FsOwoKLS0gcHJpbWFyaWx5IGludGVuZGVkIGZvciBDTEkgdXNhZ2UKQ1JFQVRFIE9SIFJFUExBQ0UgRlVOQ1RJT04gbGlzdF9zdWJuZXRzKCkKICBSRVRVUk5TIFNFVE9GIHN1Ym5ldAogIFNFQ1VSSVRZIERFRklORVIKQVMgJCQKICBCRUdJTgogICAgUkVUVVJOIFFVRVJZIFNFTEVDVCAqIEZST00gc3VibmV0IE9SREVSIEJZIHpvbmUsIHJhbmdlOwogIEVORDsKJCQgTEFOR1VBR0UgcGxwZ3NxbDsKCkNSRUFURSBPUiBSRVBMQUNFIFBST0NFRFVSRSBmcmVlX3N1Ym5ldChfaWQgVVVJRCkKICBTRUNVUklUWSBERUZJTkVSCkFTICQkCiAgQkVHSU4KICAgIFVQREFURSBzdWJuZXQgU0VUIGF2YWlsYWJsZSA9IFRSVUUsIHVzYWdlID0gJ2F2YWlsYWJsZScgV0hFUkUgaWQgPSBfaWQgQU5EIGF2YWlsYWJsZSA9IEZBTFNFOwogICAgSUYgTk9UIEZPVU5EIFRIRU4KICAgICAgUkFJU0UgRVhDRVBUSU9OICdzdWJuZXQgJSBub3QgYWxsb2NhdGVkLicsIF9pZDsKICAgIEVORCBJRjsKICBFTkQKJCQgTEFOR1VBR0UgcGxwZ3NxbDsKCkNSRUFURSBPUiBSRVBMQUNFIFBST0NFRFVSRSBkZXN0cm95X3N1Ym5ldChfaWQgVVVJRCkKICBTRUNVUklUWSBERUZJTkVSCkFTICQkCiAgQkVHSU4KICAgIERFTEVURSBGUk9NIHN1Ym5ldCBXSEVSRSBpZCA9IF9pZCBBTkQgYXZhaWxhYmxlID0gVFJVRTsKICAgIElGIE5PVCBGT1VORCBUSEVOCiAgICAgIFJBSVNFIEVYQ0VQVElPTiAnc3VibmV0ICUgbm90IGZvdW5kLicsIF9pZDsKICAgIEVORCBJRjsKICBFTkQKJCQgTEFOR1VBR0UgcGxwZ3NxbDsKCkNSRUFURSBST0xFIGNsb3VkeWlwYW1fY2xpZW50CiAgTk9TVVBFUlVTRVIKICBOT0NSRUFURURCCiAgTk9JTkhFUklUCiAgTk9SRVBMSUNBVElPTgogIE5PQllQQVNTUkxTCiAgTk9MT0dJTjsKCkdSQU5UIEVYRUNVVEUgT04gRlVOQ1RJT04gY3JlYXRlX3pvbmUgVE8gY2xvdWR5aXBhbV9jbGllbnQ7CkdSQU5UIEVYRUNVVEUgT04gUFJPQ0VEVVJFIHBvcHVsYXRlX3pvbmUgVE8gY2xvdWR5aXBhbV9jbGllbnQ7CkdSQU5UIEVYRUNVVEUgT04gRlVOQ1RJT04gbGlzdF96b25lcyBUTyBjbG91ZHlpcGFtX2NsaWVudDsKR1JBTlQgRVhFQ1VURSBPTiBQUk9DRURVUkUgZGVzdHJveV96b25lIFRPIGNsb3VkeWlwYW1fY2xpZW50OwpHUkFOVCBFWEVDVVRFIE9OIEZVTkNUSU9OIGFsbG9jYXRlX3N1Ym5ldCBUTyBjbG91ZHlpcGFtX2NsaWVudDsKR1JBTlQgRVhFQ1VURSBPTiBQUk9DRURVUkUgZnJlZV9zdWJuZXQgVE8gY2xvdWR5aXBhbV9jbGllbnQ7CkdSQU5UIEVYRUNVVEUgT04gRlVOQ1RJT04gbGlzdF9zdWJuZXRzIFRPIGNsb3VkeWlwYW1fY2xpZW50OwpHUkFOVCBFWEVDVVRFIE9OIFBST0NFRFVSRSBkZXN0cm95X3N1Ym5ldCBUTyBjbG91ZHlpcGFtX2NsaWVudDsK
`
)
func Text() string {
	data,_ := base64.StdEncoding.DecodeString(EncodedText)
	return string(data)
}
